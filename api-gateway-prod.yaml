server:
  port: 8084

# for eureka server
eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8082/eureka/


spring:
  cloud:
    gateway:
      server:
        webflux:
          discovery:
            locator:
              enabled: true
              include-expression: true
              lower-case-service-id: true
          httpclient:
            connect-timeout: 1000
            response-timeout: 10s

  
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/Fin_Tracker
          # jwk-set-uri: http://localhost:8080/realms/Fin_Tracker/protocol/openid-connect/certs





#enable all actuator endpoint
management:
  endpoints:
    web:
      exposure:
        include: "*"
  # for all actuator property
  endpoint:
    health:
      probes:
        enabled: true
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}




logging:
  level:
    org:
      api:
        gateway: DEBUG


  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

# key cloak config
keycloak:
  realm: Fin_Tracker
  auth-server-url: http://localhost:8080
  # Use 'external' in production
  ssl-required: external

  # Name of the client
  resource: fin_tracker
  # Replace with your client's secret
  credentials:
    secret: C09PRbylVhfEzjCg8R0ajjPwi2QFInJQ
  use-resource-role-mappings: true
  bearer-only: true
  redirect-uri: http://localhost:8081/api/auth/callback

grant-type: password
name: admin123
password: admin

grant-type: password
name: admin123
password: admin