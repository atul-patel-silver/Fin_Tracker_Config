server:
    port: 8081

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/user_service_db
    username: postgres
    password: root

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect



# key cloak config
keycloak:
  realm: Fin_Tracker
  auth-server-url: http://localhost:8080
  # Use 'external' in production
  ssl-required: external

  # Name of the client
  resource: fin_tracker
  # Replace with your client's secret
  credentials:
#    secret: RwVc3vGWlDVNzW72Ce5VBoZubWIbJqc6
    secret: p4iyAe2LjagxOm7privweK7udL4yTonX
  use-resource-role-mappings: true
  bearer-only: true
  redirect-uri: http://localhost:8081/api/auth/callback

grant-type: password
name: admin123
password: admin




# actuator endpoint
management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    health:
      probes:
        enabled: true
    shutdown:  # for eureka server
      enabled: true

  metrics:
    tags:
      application: ${spring.application.name}


  info:
    env:
      enabled: true


endpoints:
  shutdown:
    enabled: true



eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8082/eureka/

logging:
  level:
    org:
      service:
        user: DEBUG

  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

